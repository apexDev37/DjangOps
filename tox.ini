[tox]
requires =
    tox>=4
env_list =
    py{310,311,312}-django{42,50}
    type
    lint
# Using tox for an application, instead of a library.
no_package = True

[testenv]
labels = core, test
description = run django checks & tests
set_env = file|{tox_root}/.envs/django.env
deps =
    django42: Django>=4.2,<5.0
    django50: Django>=5.0,<5.1
    -r{tox_root}/requirements/test-ci.txt

commands =
    python manage.py check
    # Prefer to isolate `test` from `test + coverage` runs
    # to avoid runtime and overhead costs of measuring coverage.
    # Hence, avoid adding the `--cov` flag to pytest while
    # running in the base test environment.
    pytest {posargs}

[testenv:type]
labels = quality, static, typing
description = run type safety and validation checks
skip_install = true
deps =
    mypy>=1.9
commands = mypy . {posargs:--warn-unused-configs}

[testenv:lint-py]
labels = quality, static, linting
description = run Python code standard and quality checks & fixes.
skip_install = true
deps =
    ruff>=0.3.5
commands = ruff check {posargs:--quiet}

[testenv:lint-codebase]
labels = quality, static, linting
description = run project-wide standard and quality checks & fixes.
skip_install = true
deps =
    pre-commit>=3.0
commands = pre-commit run --all-files --show-diff-on-failure
